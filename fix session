#include <iostream>
#include <fix8/f8includes.hpp>
#include <fix8/fofihdr.hpp>

// Define your FIX session class
class MyFIXSession : public fix8::Session<MyFIXSession>
{
public:
    MyFIXSession(const fix8::f8String& cfg_file, const fix8::SessionID& sid)
        : fix8::Session<MyFIXSession>(cfg_file, sid)
    {}

    // Implement necessary session methods
    virtual void on_application(const fix8::CBuff& buf)
    {
        // Process incoming application-level messages
    }

    virtual void on_admin(const fix8::CBuff& buf)
    {
        // Process incoming administrative messages
    }

    virtual bool send(const std::string& msg)
    {
        // Send FIX message
        return send_application(msg);
    }
};

int main()
{
    // Initialize session configuration
    fix8::SessionID sid("SenderCompID", "TargetCompID", "SenderSubID", "TargetSubID");
    fix8::f8String cfg_file("config_file.ini");

    // Create and start FIX session
    MyFIXSession session(cfg_file, sid);
    session.start();

    // Send a FIX message (example)
    session.send("35=D|49=SenderCompID|56=TargetCompID|34=1|52=20240506-10:15:00");

    // Keep the session alive
    while (session.is_logged_on())
    {
        // Handle session-level events
    }

    // Stop the session
    session.stop();

    return 0;
}
