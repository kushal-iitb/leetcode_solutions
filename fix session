#include <iostream>
#include <fix8/session.hpp>
#include <fix8/config.hpp>
#include <fix8/logger.hpp>

// Define your FIX session class
class MyFIXSession : public fix8::Session<MyFIXSession>
{
public:
    MyFIXSession(const FIX8::SessionID& sid, const FIX8::Config::SessionSettings& settings)
        : fix8::Session<MyFIXSession>(sid, settings)
    {}

    // Implement necessary session methods
    virtual bool handle_application(const FIX8::Message*& msg)
    {
        // Process incoming application-level messages
        return true;
    }

    virtual bool handle_admin(const FIX8::Message*& msg)
    {
        // Process incoming administrative messages
        return true;
    }
};

int main()
{
    // Initialize session configuration
    FIX8::SessionID sid("SenderCompID", "TargetCompID", "SenderSubID", "TargetSubID");
    FIX8::Config::SessionSettings settings;
    settings.from_file("config_file.ini");

    // Create and start FIX session
    MyFIXSession session(sid, settings);
    session.initiate();

    // Send a FIX message (example)
    session.send("35=D|49=SenderCompID|56=TargetCompID|34=1|52=20240506-10:15:00");

    // Keep the session alive
    while (session.isLoggedOn())
    {
        // Handle session-level events
        session.poll();
    }

    // Stop the session
    session.terminate();

    return 0;
}
